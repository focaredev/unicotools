 <DllImport("User32.dll", SetLastError:=True)>
    <MarshalAs(UnmanagedType.Bool)>
    Private Shared Function PrintWindow(ByVal hwnd As IntPtr, ByVal hDC As IntPtr, ByVal nFlags As UInteger) As Boolean
    <DllImport("user32.dll")>
    Private Shared Function GetWindowRect(ByVal handle As IntPtr, ByRef rect As Rectangle) As Boolean
    <DllImport("user32.dll", SetLastError:=True)>
    Private Shared Function FindWindow(ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr

    Public Sub CaptureWindow(ByVal handle As IntPtr)
        Dim rect As Rectangle = New Rectangle()
        GetWindowRect(handle, rect)
        rect.Width = rect.Width - rect.X
        rect.Height = rect.Height - rect.Y

        Using bitmap As Bitmap = New Bitmap(rect.Width, rect.Height)

            Using g As Graphics = Graphics.FromImage(bitmap)
                Dim hdc As IntPtr = g.GetHdc()

                If Not PrintWindow(handle, hdc, 0) Then
                    Dim [error] As Integer = Marshal.GetLastWin32Error()
                    Dim exception = New System.ComponentModel.Win32Exception([error])
                    Debug.WriteLine("ERROR: " & [error] & ": " & exception.Message)
                End If

                g.ReleaseHdc(hdc)
            End Using

            bitmap.Save("Example.png")
        End Using
    End Sub
